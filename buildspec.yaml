version: 0.2

phases:
  install: 
    commands:
      - echo installing app dependencies 
      - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.15/2022-10-31/bin/darwin/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      # Update Kube config Home Directory
      - export KUBECONFIG=$HOME/.kube/config      
  pre_build:
    commands:
      - echo logging in to amazon ECR...
      - aws --version
      - REPOSITORY_URI=296475210819.dkr.ecr.ap-south-1.amazonaws.com/aws-pipeline
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Logging in to Amazon EKS...
      # - aws eks --region ap-south-1 update-kubeconfig --name k8-demo
      - echo check config 
      # - kubectl config view --minify
      # - echo check kubectl access
      # - kubectl get svc
      - echo Build phase started on 'date'
      - echo Building the jar file using maven 
      - mvn clean package
      - echo Building the Docker image
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed successfully
      - echo pushing the images to ECR
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 296475210819.dkr.ecr.ap-south-1.amazonaws.com
      - docker push $REPOSITORY_URI:latest 
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      # Extracting AWS Credential Information using STS Assume Role for kubectl
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')      
artifacts:
  files:
    - target/order-service.jar
  discard-paths: yes
